<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:command="http://www.galasoft.ch/mvvmlight"
                    xmlns:processor="clr-namespace:Huddle.Engine.Processor"
                    xmlns:barCodes="clr-namespace:Huddle.Engine.Processor.BarCodes"
                    xmlns:util="clr-namespace:Huddle.Engine.Util"
                    xmlns:data="clr-namespace:Huddle.Engine.Data">

    <DataTemplate x:Key="DefaultTemplate">
        <Label Content="No template defined" />
    </DataTemplate>

    <DataTemplate x:Key="DataTypeFilter" DataType="processor:DataTypeFilter">
        <StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Content="Type"/>
                <ComboBox Width="200"
                          ItemsSource="{Binding Path=Types}"
                          SelectedValue="{Binding Path=Type}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal">
                <Label Content="Key"/>
                <TextBox Width="100" Text="{Binding Path=Key}" />
                <Button Content="Apply" />
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="DataViewer" DataType="processor:DataViewer">
        <DataGrid ItemsSource="{Binding Path=DataStats}" AutoGenerateColumns="True" />
    </DataTemplate>

    <DataTemplate x:Key="Sampler" DataType="processor:Sampler">

    </DataTemplate>

    <DataTemplate x:Key="ITakeLong" DataType="processor:ITakeLong">

    </DataTemplate>

    <DataTemplate x:Key="QRCodeDecoder" DataType="barCodes:QRCodeDecoder">
        <StackPanel>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <GroupBox Header="Pre Processed Image"
                          Grid.Column="0">
                    <Image Source="{Binding Path=PreProcessImage}" />
                </GroupBox>
                <GroupBox Header="Post Processed Image"
                          Grid.Column="1">
                    <Image Source="{Binding Path=PostProcessImage}" />
                </GroupBox>
            </Grid>

            <CheckBox Content="Try Harder" VerticalAlignment="Center" IsChecked="{Binding Path=TryHarder}" />

        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="GlyphDecoder" DataType="barCodes:GlyphDecoder">
        <StackPanel>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="320" />
                    <ColumnDefinition Width="320" />
                </Grid.ColumnDefinitions>

                <GroupBox Header="Binary Threshold Image"
                          Grid.Column="0">
                    <Image Source="{Binding Path=BinaryThresholdImageSource}" />
                </GroupBox>
                <GroupBox Header="Post Processed Image"
                          Grid.Column="1">
                    <Image Source="{Binding Path=OutputImage}" />
                </GroupBox>
            </Grid>

            <StackPanel Orientation="Horizontal">
                <Label Content="MinFramesHistory"/>
                <Slider Value="{Binding Path=MinFramesProperty}" Width="340" Height="25" Minimum="1" Maximum="100" IsSnapToTickEnabled="True" TickFrequency="1" />
                <TextBlock Text="{Binding Path=MinFramesProperty, StringFormat={}{0}}"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal">
                <Label Content="Binary Threshold"/>
                <Slider Value="{Binding Path=BinaryThreshold}" Width="340" Height="25" Minimum="0" Maximum="255" IsSnapToTickEnabled="True" TickFrequency="1" />
                <TextBlock Text="{Binding Path=BinaryThreshold, StringFormat={}{0}}"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal">
                <Label Content="ROI Expand Factor"/>
                <Slider Value="{Binding Path=RoiExpandFactor}" Width="340" Height="25" Minimum="0.000" Maximum="2.000" IsSnapToTickEnabled="False" TickFrequency="0.005" />
                <TextBlock Text="{Binding Path=RoiExpandFactor, StringFormat={}{0:#.###}}"/>
            </StackPanel>

            <CheckBox Content="Use blobs to minimize scan area" VerticalAlignment="Center" IsChecked="{Binding Path=UseBlobs}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="VideoRecordAndPlay" DataType="processor:VideoRecordAndPlay">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <GroupBox Header="Color Image"
                          Grid.Column="0">
                    <Image Source="{Binding Path=ColorImageSource}" Width="320" Height="240"/>
                </GroupBox>
                <GroupBox Header="Depth Image"
                          Grid.Column="1">
                    <Image Source="{Binding Path=DepthImageSource}" Width="320" Height="240"/>
                </GroupBox>
                <GroupBox Header="Confidence Image"
                          Grid.Column="2">
                    <Image Source="{Binding Path=ConfidenceImageSource}" Width="320" Height="240"/>
                </GroupBox>
            </Grid>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Content="Fps"/>
                <Slider Grid.Column="1" Value="{Binding Path=Fps}"
                        TickFrequency="5"
                        TickPlacement="BottomRight"
                        AutoToolTipPlacement="TopLeft"
                        AutoToolTipPrecision="0"
                        Minimum="1"
                        Maximum="120" />
                <TextBlock Grid.Column="2" Text="{Binding Path=Fps}"/>
            </Grid>

            <StackPanel Grid.Row="2" Orientation="Horizontal">
                <Label Content="Mode"/>
                <ComboBox ItemsSource="{Binding Path=Modes}"
                          SelectedValue="{Binding Path=Mode}" />
                <Button Content="Apply" />
                <CheckBox Content="Loop" IsChecked="{Binding Path=IsEndlessLoop}" />
            </StackPanel>

            <Grid Grid.Row="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <command:EventToCommand Command="{Binding Path=PlayCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Image Source="/Huddle.Engine;component/Resources/play.png">
                    </Image>
                </Button>
                <Button Grid.Column="1">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <command:EventToCommand Command="{Binding Path=StopCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Image Source="/Huddle.Engine;component/Resources/stop.png">
                    </Image>
                </Button>
                <Button Grid.Column="2">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <command:EventToCommand Command="{Binding Path=RecordCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Image Source="/Huddle.Engine;component/Resources/record.png" />
                </Button>
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="Merge" DataType="processor:MergeProcessor">
        <StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Content="Distance"/>
                <Slider Value="{Binding Path=Distance}" Width="340" Height="25" Minimum="0.001" Maximum="1.0" />
                <TextBlock Text="{Binding Path=Distance, StringFormat={}{0:###}}"/>
            </StackPanel>
            <Grid>
                <ItemsControl ItemsSource="{Binding Path=Devices}"
                      Width="{Binding Path=Width}"
                      Height="{Binding Path=Height}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas Background="White" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid RenderTransformOrigin="0.5,0.5">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="{Binding Path=Angle}" />
                                        <TranslateTransform X="-25" Y="-20" />
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <Rectangle Fill="Lime" Width="50" Height="40" />
                                <Line X1="25" X2="25" Y1="20" Y2="-5" Stroke="Black" StrokeThickness="3" />
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="Canvas.Left" Value="{Binding Path=X}" />
                            <Setter Property="Canvas.Top" Value="{Binding Path=Y}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
                <ItemsControl ItemsSource="{Binding Path=DrawModels}"
                      Width="{Binding Path=Width}"
                      Height="{Binding Path=Height}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas Background="Transparent" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Rectangle Fill="{Binding Path=Color}" Width="10" Height="10" RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="-5" Y="-5" />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="Canvas.Left" Value="{Binding Path=X}" />
                            <Setter Property="Canvas.Top" Value="{Binding Path=Y}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
            </Grid>
            <ItemsControl ItemsSource="{Binding Path=Devices}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <GroupBox Header="{Binding Path=Key}">
                            <StackPanel>
                                <Label Content="{Binding Path=Id}" />
                                <Label Content="{Binding Path=X}" />
                                <Label Content="{Binding Path=Y}" />
                                <Label Content="{Binding Path=Angle}" />
                            </StackPanel>
                        </GroupBox>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
    </DataTemplate>
    
    <util:PresenceTemplateSelector x:Key="PresenceTemplateSelector">
        <util:PresenceTemplateSelector.DeviceTemplate>
            <DataTemplate DataType="{x:Type data:Device}">
                <Grid RenderTransformOrigin="0.5,0.5" ClipToBounds="False">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="{Binding Path=SmoothedAngle}" />
                            <TranslateTransform X="{Binding ElementName=DeviceBorder, Path=ActualWidth, Converter={util:LambdaValueConverter (-param / 2)}}" Y="{Binding ElementName=DeviceBorder, Path=ActualHeight, Converter={util:LambdaValueConverter (-param / 2)}}" />
                        </TransformGroup>
                    </Grid.RenderTransform>
                    <Border x:Name="DeviceBorder" Visibility="{Binding Path=IsIdentified, Converter={util:BoolToVisibilityConverter}}"
                                        Background="Transparent"
                                        BorderBrush="Black"
                                        BorderThickness="10">
                        <Border.Width>
                            <MultiBinding Converter="{util:RatioConverter}">
                                <Binding Path="RgbImageToDisplayRatio.X" />
                                <Binding Path="ActualWidth" ElementName="DeviceContainer" />
                            </MultiBinding>
                        </Border.Width>
                        <Border.Height>
                            <MultiBinding Converter="{util:RatioConverter}">
                                <Binding Path="RgbImageToDisplayRatio.Y" />
                                <Binding Path="ActualHeight" ElementName="DeviceContainer" />
                            </MultiBinding>
                        </Border.Height>
                        <Grid>
                            <Line X1="0" X2="0" Y1="0" Y2="{Binding ElementName=DeviceBorder, Path=ActualHeight, Converter={util:LambdaValueConverter (-param * 0.4)}}"
                                  Stroke="DeepPink"
                                  StrokeThickness="{Binding ElementName=DeviceBorder, Path=ActualHeight, Converter={util:LambdaValueConverter (-param * 0.05)}}"
                                  VerticalAlignment="Center" HorizontalAlignment="Center"/>

                            <StackPanel Grid.Row="0" Orientation="Vertical" Margin="5">
                                <TextBlock ClipToBounds="False" Text="{Binding Path=DeviceId, StringFormat='ID {0}'}" />
                                <TextBlock ClipToBounds="False">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="Blob ID {0} (Key={1})">
                                            <Binding Path="BlobId" />
                                            <Binding Path="Key" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                <TextBlock ClipToBounds="False">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="Center X={0:#.##}, Y={1:#.##}">
                                            <Binding Path="Center.X" />
                                            <Binding Path="Center.Y" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                <TextBlock ClipToBounds="False">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="Center X={0:#.##}, Y={1:#.##} (smoothed)">
                                            <Binding Path="SmoothedCenter.X" />
                                            <Binding Path="SmoothedCenter.Y" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                <TextBlock ClipToBounds="False" Text="{Binding Path=Angle, StringFormat='Angle {0:#.##}'}" />
                                <TextBlock ClipToBounds="False" Text="{Binding Path=SmoothedAngle, StringFormat='Angle {0:#.##} (smoothed)'}" />
                                <TextBlock ClipToBounds="False">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="Ratio X={0:#.##}, Y={1:#.##}">
                                            <Binding Path="RgbImageToDisplayRatio.X" />
                                            <Binding Path="RgbImageToDisplayRatio.Y" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <Rectangle Fill="Red" Width="40" Height="40" Visibility="{Binding Path=IsIdentified, Converter={util:BoolToVisibilityConverter Invert=True}}" />
                </Grid>
            </DataTemplate>
        </util:PresenceTemplateSelector.DeviceTemplate>
    </util:PresenceTemplateSelector>

    <DataTemplate x:Key="ProximityProcessorTemplate" DataType="processor:ProximityProcessor">
        <StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Content="Distance"/>
                <Slider Value="{Binding Path=Distance}" Width="340" Height="25" Minimum="0.001" Maximum="1.0" />
                <TextBlock Text="{Binding Path=Distance, StringFormat={}{0:###}}"/>
            </StackPanel>
            <Grid x:Name="DeviceContainer"
                  Width="1280"
                  Height="720">
                <ItemsControl ItemsSource="{Binding Path=Devices}" ItemTemplateSelector="{StaticResource ResourceKey=PresenceTemplateSelector}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas Background="White" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="Canvas.Left">
                                <Setter.Value>
                                    <MultiBinding Converter="{util:ScaleConverter}">
                                        <Binding Path="SmoothedCenter.X" />
                                        <Binding Path="ActualWidth" ElementName="DeviceContainer" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Canvas.Top">
                                <Setter.Value>
                                    <MultiBinding Converter="{util:ScaleConverter}">
                                        <Binding Path="SmoothedCenter.Y" />
                                        <Binding Path="ActualHeight" ElementName="DeviceContainer" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
            </Grid>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="DataRenderer" DataType="processor:DataRenderer">
        <StackPanel>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="640" />
                </Grid.ColumnDefinitions>

                <GroupBox Header="Pre Processed Image"
                          Grid.Column="0">
                    <Image Source="{Binding Path=DebugOutputBitmapSource}" />
                </GroupBox>
            </Grid>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="Dummy" DataType="processor:Dummy">
        <StackPanel>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="320" />
                    <ColumnDefinition Width="320" />
                </Grid.ColumnDefinitions>

                <GroupBox Header="Pre Processed Image"
                          Grid.Column="0">
                    <Image x:Name="PreProcessImage" Source="{Binding Path=PreProcessImage}" />
                </GroupBox>
                <GroupBox Header="Post Processed Image"
                          Grid.Column="1">
                    <Image Source="{Binding Path=PostProcessImage}" />
                </GroupBox>
            </Grid>

        </StackPanel>
    </DataTemplate>

</ResourceDictionary>